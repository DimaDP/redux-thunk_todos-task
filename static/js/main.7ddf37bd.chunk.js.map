{"version":3,"sources":["CurrentUser.js","TodoList.js","api.js","store.js","App.js","index.js"],"names":["CurrentUser","_ref","user","react_default","a","createElement","className","concat","id","name","email","phone","TodoList","todos","showUser","map","todo","key","htmlFor","type","checked","completed","readOnly","title","onClick","userId","API_URL","getTodos","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","wait","fetch","sent","json","abrupt","stop","apply","this","arguments","getUser","_ref2","_callee2","_context2","_x","delay","Promise","resolve","setTimeout","initialState","isLoading","isLoaded","hasError","isLoadingUser","currentUser","store","createStore","state","length","undefined","action","objectSpread2","composeWithDevTools","applyMiddleware","thunk","override","css","_templateObject","App","dispatch","useDispatch","_useSelector","useSelector","then","data","catch","entries","ClipLoader_default","size","color","loading","src_TodoList","getState","finishtLoadingUser","loadUser","Fragment","src_CurrentUser","Root","es","src_App","ReactDOM","render","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.7ddf37bd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CurrentUser = ({ user }) => (\n  <div className=\"CurrentUser\">\n    <strong>Selected user:</strong>\n    <ul>\n      <li>{`#${user.id}`}</li>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.phone}</li>\n    </ul>\n  </div>\n);\n\nexport default CurrentUser;\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, showUser }) => (\n  <div className=\"TodoList\">\n    <strong>Todos:</strong>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"TodoList__item\">\n          <label htmlFor={`todo-${todo.id}`}>\n            <input\n              type=\"checkbox\"\n              id={`todo-${todo.id}`}\n              checked={todo.completed}\n              readOnly\n            />\n            {todo.title}\n          </label>\n\n          <button type=\"button\" onClick={() => showUser(todo.userId)}>\n            User\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showUser: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async() => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/todos`);\n  const todos = await response.json();\n\n  // const getTodoByUserId = userId => todos.find(todo => todo.userId === userId)\n\n  // return todos.filter(todo => todo === getTodoByUserId(todo.userId));\n  return todos;\n};\n\nexport const getUser = async(userId) => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/users/${userId}`);\n\n  return response.json();\n};\n\nconst wait = delay => new Promise((resolve) => {\n  setTimeout(resolve, delay);\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getTodos, getUser } from './api';\n\nconst START_TODOS_LOADING = 'START_TODOS_LOADING';\nconst FINISH_TODOS_LOADING = 'FINISH_TODOS_LOADING';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst CLEAR_TODOS = 'CLEAR_TODOS';\nconst START_LOADING_USER = 'START_LOADING_USER';\nconst FINISH_LOADING_USER = 'FINISH_LOADING_USER';\nconst CLEAR_USER = 'CLEAR_USER';\n\nexport const startLoading = () => ({ type: START_TODOS_LOADING });\nexport const finishLoading = todos => ({\n  type: FINISH_TODOS_LOADING,\n  todos,\n});\nexport const handleError = () => ({ type: HANDLE_ERROR });\nexport const clearTodos = () => ({ type: CLEAR_TODOS });\nexport const startLoadingUser = () => ({ type: START_LOADING_USER });\nexport const finishtLoadingUser = user => ({\n  type: FINISH_LOADING_USER, currentUser: user,\n});\nexport const clearUser = () => ({ type: CLEAR_USER });\n\nexport const loadTodos = () => (dispatch) => {\n  dispatch(startLoading());\n  getTodos()\n    .then(data => dispatch(finishLoading(data)))\n    .catch(() => dispatch(handleError()));\n};\n\nexport const loadUser = id => (dispatch) => {\n  const { currentUser } = store.getState();\n\n  if (id !== currentUser.id) {\n    dispatch(clearUser());\n    dispatch(startLoadingUser());\n    getUser(id).then(user => dispatch(finishtLoadingUser(user)));\n  }\n};\n\nconst initialState = {\n  isLoading: false,\n  isLoaded: false,\n  hasError: false,\n  isLoadingUser: false,\n  currentUser: {},\n  todos: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case START_TODOS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        hasError: true,\n        isLoading: false,\n        isLoaded: true,\n      };\n\n    case FINISH_TODOS_LOADING:\n      return {\n        ...state,\n        todos: action.todos,\n        isLoading: false,\n        hasError: false,\n        isLoaded: true,\n      };\n\n    case CLEAR_TODOS:\n      return {\n        ...state,\n        isLoaded: false,\n        todos: [],\n      };\n\n    case START_LOADING_USER:\n      return {\n        ...state,\n        isLoadingUser: true,\n      };\n\n    case FINISH_LOADING_USER:\n      return {\n        ...state,\n        currentUser: action.currentUser,\n        isLoadingUser: false,\n      };\n\n    case CLEAR_USER:\n      return {\n        ...state,\n        currentUser: {},\n        isLoadingUser: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  ),\n\n);\n\nexport default store;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { css } from '@emotion/core';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CurrentUser from './CurrentUser';\nimport TodoList from './TodoList';\nimport { clearTodos as clearStateTodos,\n  clearUser as clearStateUser,\n  loadTodos, loadUser } from './store';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border: 3px solid grey;\n`;\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { todos,\n    currentUser,\n    isLoading,\n    isLoaded,\n    hasError,\n    isLoadingUser } = useSelector(state => state);\n\n  const getTodos = () => {\n    dispatch(loadTodos());\n  };\n\n  const clearTodos = () => {\n    dispatch(clearStateTodos());\n  };\n\n  const showUser = (id) => {\n    dispatch(loadUser(id));\n  };\n\n  const clearUser = () => {\n    dispatch(clearStateUser());\n  };\n\n  return (\n    <main className=\"App\">\n      <section>\n        {isLoading ? (<p className=\"info\">Loading...</p>\n        ) : (\n          isLoaded ? (\n            hasError ? (\n              <p className=\"info\">\n              Failed loading todos\n                <button type=\"button\" onClick={getTodos}>Reload</button>\n              </p>\n            ) : (\n              <p className=\"info\">\n                {todos.length}\n                {' '}\n                todos are loaded\n                <button type=\"button\" onClick={clearTodos}>Clear</button>\n              </p>\n            )\n\n          ) : (\n            <p className=\"info\">\n            Todos are not loaded yet\n              <button type=\"button\" onClick={getTodos}>Load</button>\n            </p>\n          )\n        )}\n\n        {!Object.entries(currentUser).length ? (\n          <p className=\"info\">User is not selected</p>\n        ) : (\n          <p className=\"info\">\n          User #\n            {currentUser.id}\n            is loaded\n            <button type=\"button\" onClick={clearUser}>Clear</button>\n          </p>\n        )}\n      </section>\n\n      {/* <section>\n\n        <p className=\"info\">\n          Failed loading user\n          <button type=\"button\">Reload</button>\n        </p>\n      </section>\n\n      <section>\n        <p className=\"info\">\n          User #1 is loaded\n          <button type=\"button\">Clear</button>\n        </p>\n      </section>\n\n      <section>\n        <p className=\"info\">User #999 does not exist</p>\n      </section> */}\n\n      <section>\n        <div className=\"content\">\n          {isLoading ? (\n            <ClipLoader\n              css={override}\n              size={50}\n              color=\"black\"\n              loading={isLoading}\n            />\n          ) : (\n            isLoaded && !hasError ? (\n              <TodoList todos={todos} showUser={showUser} />\n            ) : (\n              <></>\n            ))}\n        </div>\n        <div className=\"content content--user\">\n          {Object.entries(currentUser).length ? (\n            <CurrentUser user={currentUser} />\n          ) : (\n            <ClipLoader\n              css={override}\n              size={50}\n              color=\"black\"\n              loading={isLoadingUser}\n            />\n          )}\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}