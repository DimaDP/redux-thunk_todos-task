{"version":3,"sources":["CurrentUser.js","TodoList.js","api.js","App.js","store.js","index.js"],"names":["CurrentUser","_ref","user","react_default","a","createElement","className","concat","id","name","email","phone","TodoList","todos","showUser","map","todo","key","htmlFor","type","checked","completed","readOnly","title","onClick","userId","API_URL","getTodos","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","wait","fetch","sent","json","abrupt","stop","apply","this","arguments","getUser","_ref2","_callee2","_context2","_x","delay","Promise","resolve","setTimeout","override","css","_templateObject","App","_useState","useState","_useState2","slicedToArray","isLoading","setLoading","_useState3","_useState4","isLoaded","setIsLoaded","_useState5","_useState6","hasError","setHasError","_useState7","_useState8","isLoadingUser","setLoadingUser","_useState9","_useState10","currentUser","setCurrentUser","_useState11","_useState12","setTodos","loadTodos","then","catch","clearUser","length","entries","ClipLoader_default","size","color","loading","src_TodoList","Fragment","src_CurrentUser","store","createStore","state","action","Root","es","src_App","ReactDOM","render","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.76e53d06.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CurrentUser = ({ user }) => (\n  <div className=\"CurrentUser\">\n    <strong>Selected user:</strong>\n    <ul>\n      <li>{`#${user.id}`}</li>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.phone}</li>\n    </ul>\n  </div>\n);\n\nexport default CurrentUser;\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, showUser }) => (\n  <div className=\"TodoList\">\n    <strong>Todos:</strong>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"TodoList__item\">\n          <label htmlFor={`todo-${todo.id}`}>\n            <input\n              type=\"checkbox\"\n              id={`todo-${todo.id}`}\n              checked={todo.completed}\n              readOnly\n            />\n            {todo.title}\n          </label>\n\n          <button type=\"button\" onClick={() => showUser(todo.userId)}>\n            User\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showUser: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async() => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/todos`);\n  const todos = await response.json();\n\n  // const getTodoByUserId = userId => todos.find(todo => todo.userId === userId)\n\n  // return todos.filter(todo => todo === getTodoByUserId(todo.userId));\n  return todos;\n};\n\nexport const getUser = async(userId) => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/users/${userId}`);\n\n  return response.json();\n};\n\nconst wait = delay => new Promise((resolve) => {\n  setTimeout(resolve, delay);\n});\n","/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport { css } from '@emotion/core';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport CurrentUser from './CurrentUser';\nimport TodoList from './TodoList';\nimport { getTodos, getUser } from './api';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: grey;\n`;\n\nconst App = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isLoadingUser, setLoadingUser] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [todos, setTodos] = useState([]);\n\n  const loadTodos = async() => {\n    setLoading(true);\n    setHasError(false);\n    await getTodos().then(setTodos).catch(() => setHasError(true));\n    setLoading(false);\n    setIsLoaded(true);\n  };\n\n  const clearTodos = () => {\n    setIsLoaded(false);\n    setTodos([]);\n  };\n\n  const showUser = async(id) => {\n    if (id !== currentUser.id) {\n      clearUser();\n      setLoadingUser(true);\n      await getUser(id).then(user => setCurrentUser(user));\n      setLoadingUser(false);\n    }\n  };\n\n  const clearUser = () => {\n    setCurrentUser({});\n    setLoadingUser(false);\n  };\n\n  return (\n    <main className=\"App\">\n      <section>\n        {isLoading ? (<p className=\"info\">Loading...</p>\n        ) : (\n          isLoaded ? (\n            hasError ? (\n              <p className=\"info\">\n              Failed loading todos\n                <button type=\"button\" onClick={loadTodos}>Reload</button>\n              </p>\n            ) : (\n              <p className=\"info\">\n                {todos.length}\n                {' '}\n                todos are loaded\n                <button type=\"button\" onClick={clearTodos}>Clear</button>\n              </p>\n            )\n\n          ) : (\n            <p className=\"info\">\n            Todos are not loaded yet\n              <button type=\"button\" onClick={loadTodos}>Load</button>\n            </p>\n          )\n        )}\n\n        {!Object.entries(currentUser).length ? (\n          <p className=\"info\">User is not selected</p>\n        ) : (\n          <p className=\"info\">\n          User #\n            {currentUser.id}\n            is loaded\n            <button type=\"button\" onClick={clearUser}>Clear</button>\n          </p>\n        )}\n      </section>\n\n      {/* <section>\n\n        <p className=\"info\">\n          Failed loading user\n          <button type=\"button\">Reload</button>\n        </p>\n      </section>\n\n      <section>\n        <p className=\"info\">\n          User #1 is loaded\n          <button type=\"button\">Clear</button>\n        </p>\n      </section>\n\n      <section>\n        <p className=\"info\">User #999 does not exist</p>\n      </section> */}\n\n      <section>\n        <div className=\"content\">\n          {isLoading ? (\n            <ClipLoader\n              css={override}\n              size={50}\n              color=\"black\"\n              loading={isLoading}\n            />\n          ) : (\n            isLoaded && !hasError ? (\n              <TodoList todos={todos} showUser={showUser} />\n            ) : (\n              <></>\n            ))}\n        </div>\n        <div className=\"content content--user\">\n          {Object.entries(currentUser).length ? (\n            <CurrentUser user={currentUser} />\n          ) : (\n            <ClipLoader\n              css={override}\n              size={50}\n              color=\"black\"\n              loading={isLoadingUser}\n            />\n          )}\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default App;\n","import { createStore } from 'redux';\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  initialState\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}